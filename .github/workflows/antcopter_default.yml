# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Antcopter Default Miniapp to Pages

on:
  # Runs on pushes targeting the default branch
  #push:
    #branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:    
  # Build job
  build:
    runs-on: ubuntu-latest
    environment: antcopter-default
    steps:
      - name: Set up .env
        env:
            DOT_ENV_VARIABLES: >-
              NEXT_PUBLIC_APP_ADDR
              NEXT_PUBLIC_WORLD_ADDR
              NEXT_PUBLIC_NETWORK_CHAIN_ID
              NEXT_PUBLIC_RIVES_NODE_URL
              NEXT_PUBLIC_CONTEST_ID
              NEXT_PUBLIC_CARTRIDGES_URL
              NEXT_PUBLIC_TAPES_URL
              NEXT_PUBLIC_RIVES_URL
              NEXT_PUBLIC_EMULATOR_URL
              NEXT_PUBLIC_GIF_SERVER_URL
              NEXT_PUBLIC_CDP_CLIENT_API_KEY
              FARCASTER_HEADER
              FARCASTER_PAYLOAD
              FARCASTER_SIGNATURE
              NEXT_PUBLIC_APP_DESCRIPTION
              NEXT_PUBLIC_APP_OG_TITLE
              NEXT_PUBLIC_APP_PRIMARY_CATEGORY
              NEXT_PUBLIC_APP_SUBTITLE
              NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME
              NEXT_PUBLIC_SPLASH_BACKGROUND_COLOR
              NEXT_PUBLIC_URL
              NEXT_PUBLIC_APP_ICON
              NEXT_PUBLIC_WEBHOOK_URL
              NEXT_PUBLIC_APP_SPLASH_IMAGE
              NEXT_PUBLIC_APP_HERO_IMAGE
              NEXT_PUBLIC_APP_OG_IMAGE
            NEXT_PUBLIC_APP_ADDR: "0xECB28678045a94F8b96EdE1c8203aDEa81F8AAe3"
            NEXT_PUBLIC_WORLD_ADDR: "0x04969e1d36d43515cc6493a286021b44b0fce6f2"
            NEXT_PUBLIC_NETWORK_CHAIN_ID: "0x2105"
            NEXT_PUBLIC_RIVES_NODE_URL: "https://mainnet-v5.rives.io"
            NEXT_PUBLIC_CONTEST_ID: "8c6b995264ea8c6b995264eacfee7c08a98f4b56"
            NEXT_PUBLIC_CARTRIDGES_URL: "https://mainnet-v5.rives.io/data/cartridges"
            NEXT_PUBLIC_TAPES_URL: "https://mainnet-v5.rives.io/agg/tape"
            NEXT_PUBLIC_RIVES_URL: "https://app.rives.io"
            NEXT_PUBLIC_EMULATOR_URL: "https://emulator.rives.io/"
            NEXT_PUBLIC_GIF_SERVER_URL: "https://gif.mainnet-v5.rives.io"
            NEXT_PUBLIC_CDP_CLIENT_API_KEY: ${{secrets.NEXT_PUBLIC_CDP_CLIENT_API_KEY}}
            FARCASTER_HEADER: ${{vars.FARCASTER_HEADER}}
            FARCASTER_PAYLOAD: ${{vars.FARCASTER_PAYLOAD}}
            FARCASTER_SIGNATURE: ${{vars.FARCASTER_SIGNATURE}}
            NEXT_PUBLIC_APP_DESCRIPTION: ${{vars.NEXT_PUBLIC_APP_DESCRIPTION}}
            NEXT_PUBLIC_APP_OG_TITLE: ${{vars.NEXT_PUBLIC_APP_OG_TITLE}}
            NEXT_PUBLIC_APP_PRIMARY_CATEGORY: ${{vars.NEXT_PUBLIC_APP_PRIMARY_CATEGORY}}
            NEXT_PUBLIC_APP_SUBTITLE: ${{vars.NEXT_PUBLIC_APP_SUBTITLE}}
            NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME: ${{vars.NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME}}
            NEXT_PUBLIC_SPLASH_BACKGROUND_COLOR: ${{vars.NEXT_PUBLIC_SPLASH_BACKGROUND_COLOR}}
            NEXT_PUBLIC_URL: ${{vars.NEXT_PUBLIC_URL}}
            NEXT_PUBLIC_APP_ICON: "${{ env.NEXT_PUBLIC_URL }}/icon.png"
            NEXT_PUBLIC_WEBHOOK_URL: "${{ env.NEXT_PUBLIC_URL }}/api/webhook"
            NEXT_PUBLIC_APP_SPLASH_IMAGE: "${{ env.NEXT_PUBLIC_URL }}/splash.png"
            NEXT_PUBLIC_APP_HERO_IMAGE: "${{ env.NEXT_PUBLIC_URL }}/hero.png"
            NEXT_PUBLIC_APP_OG_IMAGE: "${{ env.NEXT_PUBLIC_URL }}/hero.png"

        run: |
            : > .env   # clears or creates .env
            for var in $DOT_ENV_VARIABLES; do
              echo $var=${!var} >> .env
            done
            echo Final .env:
            cat .env

      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
